var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __require = /* @__PURE__ */ ((x) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x, {
  get: (a, b) => (typeof require !== "undefined" ? require : a)[b]
}) : x)(function(x) {
  if (typeof require !== "undefined")
    return require.apply(this, arguments);
  throw new Error('Dynamic require of "' + x + '" is not supported');
});
var __restKey = (key) => typeof key === "symbol" ? key : key + "";
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require2() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target, mod));

// <define:process.env>
var LESSOPEN, npm_package_dependencies__reduxjs_toolkit, npm_config_cache_lock_stale, npm_config_ham_it_up, npm_package_dependencies__vitejs_plugin_react, npm_config_legacy_bundling, npm_config_sign_git_tag, USER, npm_config_user_agent, npm_config_always_auth, npm_package_dependencies_dom7, npm_package_devDependencies__vitejs_plugin_react_refresh, npm_config_bin_links, npm_config_key, SSH_AGENT_PID, XDG_SESSION_TYPE, npm_package_devDependencies_postcss_preset_env, npm_package_devDependencies_vite, npm_config_description, npm_config_fetch_retries, npm_config_heading, npm_config_init_version, npm_config_user, npm_config_allow_same_version, npm_config_if_present, npm_node_execpath, SHLVL, npm_package_dependencies_framework7_icons, npm_config_prefer_online, npm_config_noproxy, HOME, OLDPWD, npm_config_force, DESKTOP_SESSION, NVM_BIN, npm_config_only, npm_config_read_only, NVM_INC, npm_package_dependencies_react_leaflet, npm_config_cache_min, npm_config_init_license, GNOME_SHELL_SESSION_MODE, GTK_MODULES, npm_config_editor, npm_config_rollback, npm_config_tag_version_prefix, MANAGERPID, npm_package_dependencies_leaflet, npm_package_dependencies_skeleton_elements, npm_config_cache_max, npm_config_userconfig, npm_config_timing, DBUS_SESSION_BUS_ADDRESS, npm_config_tmp, npm_config_engine_strict, npm_config_init_author_name, npm_config_init_author_url, npm_config_preid, COLORTERM, npm_package_description, npm_package_dependencies__fortawesome_free_solid_svg_icons, npm_config_depth, npm_config_package_lock_only, npm_config_save_dev, npm_config_usage, NVM_DIR, npm_package_readmeFilename, npm_config_metrics_registry, npm_config_package_lock, npm_config_progress, npm_config_cafile, npm_config_otp, npm_config_https_proxy, npm_config_save_prod, IM_CONFIG_PHASE, npm_package_scripts_dev, npm_config_audit, npm_config_sso_type, npm_config_cidr, npm_config_onload_script, LOGNAME, npm_config_rebuild_bundle, npm_config_shell, npm_config_save_bundle, JOURNAL_STREAM, _, npm_package_private, npm_config_format_package_lock, npm_config_prefix, npm_config_dry_run, XDG_SESSION_CLASS, npm_config_scope, npm_config_cache_lock_wait, npm_config_registry, npm_config_browser, npm_config_ignore_prepublish, npm_config_save_optional, npm_config_searchopts, npm_config_versions, USERNAME, TERM, npm_config_cache, npm_config_proxy, npm_config_send_metrics, GNOME_DESKTOP_SESSION_ID, npm_package_scripts_start, npm_config_global_style, npm_config_ignore_scripts, npm_config_version, WINDOWPATH, npm_package_dependencies__fortawesome_react_fontawesome, npm_config_viewer, npm_config_node_gyp, npm_config_local_address, PATH, SESSION_MANAGER, INVOCATION_ID, NODE, npm_package_name, npm_package_dependencies_swiper, npm_config_audit_level, npm_config_prefer_offline, XDG_MENU_PREFIX, GNOME_TERMINAL_SCREEN, XDG_RUNTIME_DIR, npm_package_repository, npm_package_dependencies_react_redux, npm_config_color, npm_config_sign_git_commit, DISPLAY, npm_config_fetch_retry_mintimeout, npm_config_maxsockets, npm_config_sso_poll_frequency, npm_config_offline, LANG, XDG_CURRENT_DESKTOP, npm_package_dependencies_leaflet_routing_machine, npm_package_dependencies_react_dom, npm_package_dependencies_redux, npm_config_umask, XMODIFIERS, XDG_SESSION_DESKTOP, XAUTHORITY, LS_COLORS, GNOME_TERMINAL_SERVICE, npm_package_browserslist_0, npm_package_gitHead, npm_config_fund, npm_config_fetch_retry_maxtimeout, npm_config_loglevel, npm_config_logs_max, npm_config_message, npm_lifecycle_script, SSH_AUTH_SOCK, npm_package_browserslist_1, npm_config_ca, npm_config_cert, npm_config_global, npm_config_link, SHELL, npm_package_version, npm_package_browserslist_2, npm_config_save, npm_config_unicode, npm_config_access, npm_config_also, npm_lifecycle_event, QT_ACCESSIBILITY, GDMSESSION, npm_package_scripts_build, npm_package_browserslist_3, npm_config_argv, npm_config_searchlimit, npm_config_unsafe_perm, npm_config_update_notifier, npm_config_before, npm_config_long, npm_config_production, LESSCLOSE, npm_package_browserslist_4, npm_config_auth_type, npm_config_node_version, npm_config_tag, npm_config_git_tag_version, npm_config_commit_hooks, npm_config_shrinkwrap, npm_config_script_shell, GPG_AGENT_INFO, npm_package_license, npm_package_dependencies_framework7_react, npm_config_fetch_retry_factor, npm_config_strict_ssl, npm_config_save_exact, QT_IM_MODULE, npm_config_globalconfig, npm_config_init_module, npm_config_dev, npm_config_parseable, PWD, npm_package_dependencies_framework7, npm_config_globalignorefile, npm_execpath, XDG_CONFIG_DIRS, NVM_CD_FLAGS, XDG_DATA_DIRS, npm_config_cache_lock_retries, npm_config_searchstaleness, npm_package_dependencies_prop_types, npm_package_dependencies_styled_components, npm_package_devDependencies_cross_env, npm_config_save_prefix, npm_config_scripts_prepend_node_path, npm_config_node_options, npm_config_group, npm_config_init_author_email, npm_config_searchexclude, VTE_VERSION, npm_package_dependencies__fortawesome_fontawesome_svg_core, npm_config_git, npm_config_optional, INIT_CWD, npm_package_dependencies__react_leaflet_core, npm_package_dependencies_react, npm_config_json, NODE_ENV, define_process_env_default;
var init_define_process_env = __esm({
  "<define:process.env>"() {
    LESSOPEN = "| /usr/bin/lesspipe %s";
    npm_package_dependencies__reduxjs_toolkit = "^1.8.2";
    npm_config_cache_lock_stale = "60000";
    npm_config_ham_it_up = "";
    npm_package_dependencies__vitejs_plugin_react = "^1.3.2";
    npm_config_legacy_bundling = "";
    npm_config_sign_git_tag = "";
    USER = "ubuntu";
    npm_config_user_agent = "npm/6.14.5 node/v14.4.0 linux x64";
    npm_config_always_auth = "";
    npm_package_dependencies_dom7 = "^4.0.4";
    npm_package_devDependencies__vitejs_plugin_react_refresh = "^1.3.6";
    npm_config_bin_links = "true";
    npm_config_key = "";
    SSH_AGENT_PID = "1588";
    XDG_SESSION_TYPE = "x11";
    npm_package_devDependencies_postcss_preset_env = "^7.6.0";
    npm_package_devDependencies_vite = "^2.9.9";
    npm_config_description = "true";
    npm_config_fetch_retries = "2";
    npm_config_heading = "npm";
    npm_config_init_version = "1.0.0";
    npm_config_user = "1000";
    npm_config_allow_same_version = "";
    npm_config_if_present = "";
    npm_node_execpath = "/home/ubuntu/.nvm/versions/node/v14.4.0/bin/node";
    SHLVL = "1";
    npm_package_dependencies_framework7_icons = "^5.0.5";
    npm_config_prefer_online = "";
    npm_config_noproxy = "";
    HOME = "/home/ubuntu";
    OLDPWD = "/home/ubuntu";
    npm_config_force = "";
    DESKTOP_SESSION = "ubuntu";
    NVM_BIN = "/home/ubuntu/.nvm/versions/node/v14.4.0/bin";
    npm_config_only = "";
    npm_config_read_only = "";
    NVM_INC = "/home/ubuntu/.nvm/versions/node/v14.4.0/include/node";
    npm_package_dependencies_react_leaflet = "^4.0.0";
    npm_config_cache_min = "10";
    npm_config_init_license = "ISC";
    GNOME_SHELL_SESSION_MODE = "ubuntu";
    GTK_MODULES = "gail:atk-bridge";
    npm_config_editor = "vi";
    npm_config_rollback = "true";
    npm_config_tag_version_prefix = "v";
    MANAGERPID = "1335";
    npm_package_dependencies_leaflet = "^1.8.0";
    npm_package_dependencies_skeleton_elements = "^4.0.0";
    npm_config_cache_max = "Infinity";
    npm_config_userconfig = "/home/ubuntu/.npmrc";
    npm_config_timing = "";
    DBUS_SESSION_BUS_ADDRESS = "unix:path=/run/user/1000/bus";
    npm_config_tmp = "/tmp";
    npm_config_engine_strict = "";
    npm_config_init_author_name = "";
    npm_config_init_author_url = "";
    npm_config_preid = "";
    COLORTERM = "truecolor";
    npm_package_description = "pwa-web-eng2";
    npm_package_dependencies__fortawesome_free_solid_svg_icons = "^6.1.1";
    npm_config_depth = "Infinity";
    npm_config_package_lock_only = "";
    npm_config_save_dev = "";
    npm_config_usage = "";
    NVM_DIR = "/home/ubuntu/.nvm";
    npm_package_readmeFilename = "README.md";
    npm_config_metrics_registry = "https://registry.npmjs.org/";
    npm_config_package_lock = "true";
    npm_config_progress = "true";
    npm_config_cafile = "";
    npm_config_otp = "";
    npm_config_https_proxy = "";
    npm_config_save_prod = "";
    IM_CONFIG_PHASE = "1";
    npm_package_scripts_dev = "cross-env NODE_ENV=development vite";
    npm_config_audit = "true";
    npm_config_sso_type = "oauth";
    npm_config_cidr = "";
    npm_config_onload_script = "";
    LOGNAME = "ubuntu";
    npm_config_rebuild_bundle = "true";
    npm_config_shell = "/bin/bash";
    npm_config_save_bundle = "";
    JOURNAL_STREAM = "8:37750";
    _ = "/home/ubuntu/.nvm/versions/node/v14.4.0/bin/npm";
    npm_package_private = "true";
    npm_config_format_package_lock = "true";
    npm_config_prefix = "/home/ubuntu/.nvm/versions/node/v14.4.0";
    npm_config_dry_run = "";
    XDG_SESSION_CLASS = "user";
    npm_config_scope = "";
    npm_config_cache_lock_wait = "10000";
    npm_config_registry = "https://registry.npmjs.org/";
    npm_config_browser = "";
    npm_config_ignore_prepublish = "";
    npm_config_save_optional = "";
    npm_config_searchopts = "";
    npm_config_versions = "";
    USERNAME = "ubuntu";
    TERM = "xterm-256color";
    npm_config_cache = "/home/ubuntu/.npm";
    npm_config_proxy = "";
    npm_config_send_metrics = "";
    GNOME_DESKTOP_SESSION_ID = "this-is-deprecated";
    npm_package_scripts_start = "npm run dev";
    npm_config_global_style = "";
    npm_config_ignore_scripts = "";
    npm_config_version = "";
    WINDOWPATH = "2";
    npm_package_dependencies__fortawesome_react_fontawesome = "^0.2.0";
    npm_config_viewer = "man";
    npm_config_node_gyp = "/home/ubuntu/.nvm/versions/node/v14.4.0/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js";
    npm_config_local_address = "";
    PATH = "/home/ubuntu/.nvm/versions/node/v14.4.0/lib/node_modules/npm/node_modules/npm-lifecycle/node-gyp-bin:/home/ubuntu/Dokumente/GitHub/pwa-leaflet/node_modules/.bin:/home/ubuntu/.nvm/versions/node/v14.4.0/lib/node_modules/npm/node_modules/npm-lifecycle/node-gyp-bin:/home/ubuntu/Dokumente/GitHub/pwa-leaflet/node_modules/.bin:/home/ubuntu/.nvm/versions/node/v14.4.0/bin:/home/ubuntu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin";
    SESSION_MANAGER = "local/webserver:@/tmp/.ICE-unix/1665,unix/webserver:/tmp/.ICE-unix/1665";
    INVOCATION_ID = "a65a2410698644329df24a284dbb45a0";
    NODE = "/home/ubuntu/.nvm/versions/node/v14.4.0/bin/node";
    npm_package_name = "pwa-web-eng2";
    npm_package_dependencies_swiper = "^8.1.5";
    npm_config_audit_level = "low";
    npm_config_prefer_offline = "";
    XDG_MENU_PREFIX = "gnome-";
    GNOME_TERMINAL_SCREEN = "/org/gnome/Terminal/screen/e7209b80_8a6c_42d6_b8f8_6dae6ad7a12c";
    XDG_RUNTIME_DIR = "/run/user/1000";
    npm_package_repository = "";
    npm_package_dependencies_react_redux = "^8.0.2";
    npm_config_color = "true";
    npm_config_sign_git_commit = "";
    DISPLAY = ":0";
    npm_config_fetch_retry_mintimeout = "10000";
    npm_config_maxsockets = "50";
    npm_config_sso_poll_frequency = "500";
    npm_config_offline = "";
    LANG = "de_DE.UTF-8";
    XDG_CURRENT_DESKTOP = "ubuntu:GNOME";
    npm_package_dependencies_leaflet_routing_machine = "^3.2.12";
    npm_package_dependencies_react_dom = "^18.1.0";
    npm_package_dependencies_redux = "^4.2.0";
    npm_config_umask = "0002";
    XMODIFIERS = "@im=ibus";
    XDG_SESSION_DESKTOP = "ubuntu";
    XAUTHORITY = "/run/user/1000/gdm/Xauthority";
    LS_COLORS = "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:";
    GNOME_TERMINAL_SERVICE = ":1.86";
    npm_package_browserslist_0 = "IOS >= 13";
    npm_package_gitHead = "1a039f68785b9b9fbdd403c52dfb48482e604f08";
    npm_config_fund = "true";
    npm_config_fetch_retry_maxtimeout = "60000";
    npm_config_loglevel = "notice";
    npm_config_logs_max = "10";
    npm_config_message = "%s";
    npm_lifecycle_script = "cross-env NODE_ENV=development vite";
    SSH_AUTH_SOCK = "/run/user/1000/keyring/ssh";
    npm_package_browserslist_1 = "Safari >= 13";
    npm_config_ca = "";
    npm_config_cert = "";
    npm_config_global = "";
    npm_config_link = "";
    SHELL = "/bin/bash";
    npm_package_version = "1.0.0";
    npm_package_browserslist_2 = "last 5 Chrome versions";
    npm_config_save = "true";
    npm_config_unicode = "true";
    npm_config_access = "";
    npm_config_also = "";
    npm_lifecycle_event = "dev";
    QT_ACCESSIBILITY = "1";
    GDMSESSION = "ubuntu";
    npm_package_scripts_build = "cross-env NODE_ENV=production vite build";
    npm_package_browserslist_3 = "last 5 Firefox versions";
    npm_config_argv = '{"remain":[],"cooked":["run","dev"],"original":["run","dev"]}';
    npm_config_searchlimit = "20";
    npm_config_unsafe_perm = "true";
    npm_config_update_notifier = "true";
    npm_config_before = "";
    npm_config_long = "";
    npm_config_production = "";
    LESSCLOSE = "/usr/bin/lesspipe %s %s";
    npm_package_browserslist_4 = "Samsung >= 12";
    npm_config_auth_type = "legacy";
    npm_config_node_version = "14.4.0";
    npm_config_tag = "latest";
    npm_config_git_tag_version = "true";
    npm_config_commit_hooks = "true";
    npm_config_shrinkwrap = "true";
    npm_config_script_shell = "";
    GPG_AGENT_INFO = "/run/user/1000/gnupg/S.gpg-agent:0:1";
    npm_package_license = "UNLICENSED";
    npm_package_dependencies_framework7_react = "^7.0.3";
    npm_config_fetch_retry_factor = "10";
    npm_config_strict_ssl = "true";
    npm_config_save_exact = "";
    QT_IM_MODULE = "ibus";
    npm_config_globalconfig = "/home/ubuntu/.nvm/versions/node/v14.4.0/etc/npmrc";
    npm_config_init_module = "/home/ubuntu/.npm-init.js";
    npm_config_dev = "";
    npm_config_parseable = "";
    PWD = "/home/ubuntu/Dokumente/GitHub/pwa-leaflet";
    npm_package_dependencies_framework7 = "^7.0.3";
    npm_config_globalignorefile = "/home/ubuntu/.nvm/versions/node/v14.4.0/etc/npmignore";
    npm_execpath = "/home/ubuntu/.nvm/versions/node/v14.4.0/lib/node_modules/npm/bin/npm-cli.js";
    XDG_CONFIG_DIRS = "/etc/xdg/xdg-ubuntu:/etc/xdg";
    NVM_CD_FLAGS = "";
    XDG_DATA_DIRS = "/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop";
    npm_config_cache_lock_retries = "10";
    npm_config_searchstaleness = "900";
    npm_package_dependencies_prop_types = "^15.8.1";
    npm_package_dependencies_styled_components = "^5.3.5";
    npm_package_devDependencies_cross_env = "^7.0.3";
    npm_config_save_prefix = "^";
    npm_config_scripts_prepend_node_path = "warn-only";
    npm_config_node_options = "";
    npm_config_group = "1000";
    npm_config_init_author_email = "";
    npm_config_searchexclude = "";
    VTE_VERSION = "6003";
    npm_package_dependencies__fortawesome_fontawesome_svg_core = "^6.1.1";
    npm_config_git = "git";
    npm_config_optional = "true";
    INIT_CWD = "/home/ubuntu/Dokumente/GitHub/pwa-leaflet";
    npm_package_dependencies__react_leaflet_core = "^2.0.0";
    npm_package_dependencies_react = "^18.1.0";
    npm_config_json = "";
    NODE_ENV = "development";
    define_process_env_default = { LESSOPEN, npm_package_dependencies__reduxjs_toolkit, npm_config_cache_lock_stale, npm_config_ham_it_up, npm_package_dependencies__vitejs_plugin_react, npm_config_legacy_bundling, npm_config_sign_git_tag, USER, npm_config_user_agent, npm_config_always_auth, npm_package_dependencies_dom7, npm_package_devDependencies__vitejs_plugin_react_refresh, npm_config_bin_links, npm_config_key, SSH_AGENT_PID, XDG_SESSION_TYPE, npm_package_devDependencies_postcss_preset_env, npm_package_devDependencies_vite, npm_config_description, npm_config_fetch_retries, npm_config_heading, npm_config_init_version, npm_config_user, npm_config_allow_same_version, npm_config_if_present, npm_node_execpath, SHLVL, npm_package_dependencies_framework7_icons, npm_config_prefer_online, npm_config_noproxy, HOME, OLDPWD, npm_config_force, DESKTOP_SESSION, NVM_BIN, npm_config_only, npm_config_read_only, NVM_INC, npm_package_dependencies_react_leaflet, npm_config_cache_min, npm_config_init_license, GNOME_SHELL_SESSION_MODE, GTK_MODULES, npm_config_editor, npm_config_rollback, npm_config_tag_version_prefix, MANAGERPID, npm_package_dependencies_leaflet, npm_package_dependencies_skeleton_elements, npm_config_cache_max, npm_config_userconfig, npm_config_timing, DBUS_SESSION_BUS_ADDRESS, npm_config_tmp, npm_config_engine_strict, npm_config_init_author_name, npm_config_init_author_url, npm_config_preid, COLORTERM, npm_package_description, npm_package_dependencies__fortawesome_free_solid_svg_icons, npm_config_depth, npm_config_package_lock_only, npm_config_save_dev, npm_config_usage, NVM_DIR, npm_package_readmeFilename, npm_config_metrics_registry, npm_config_package_lock, npm_config_progress, npm_config_cafile, npm_config_otp, npm_config_https_proxy, npm_config_save_prod, IM_CONFIG_PHASE, npm_package_scripts_dev, npm_config_audit, npm_config_sso_type, npm_config_cidr, npm_config_onload_script, LOGNAME, npm_config_rebuild_bundle, npm_config_shell, npm_config_save_bundle, JOURNAL_STREAM, _, npm_package_private, npm_config_format_package_lock, npm_config_prefix, npm_config_dry_run, XDG_SESSION_CLASS, npm_config_scope, npm_config_cache_lock_wait, npm_config_registry, npm_config_browser, npm_config_ignore_prepublish, npm_config_save_optional, npm_config_searchopts, npm_config_versions, USERNAME, TERM, npm_config_cache, npm_config_proxy, npm_config_send_metrics, GNOME_DESKTOP_SESSION_ID, npm_package_scripts_start, npm_config_global_style, npm_config_ignore_scripts, npm_config_version, WINDOWPATH, npm_package_dependencies__fortawesome_react_fontawesome, npm_config_viewer, npm_config_node_gyp, npm_config_local_address, PATH, SESSION_MANAGER, INVOCATION_ID, NODE, npm_package_name, npm_package_dependencies_swiper, npm_config_audit_level, npm_config_prefer_offline, XDG_MENU_PREFIX, GNOME_TERMINAL_SCREEN, XDG_RUNTIME_DIR, npm_package_repository, npm_package_dependencies_react_redux, npm_config_color, npm_config_sign_git_commit, DISPLAY, npm_config_fetch_retry_mintimeout, npm_config_maxsockets, npm_config_sso_poll_frequency, npm_config_offline, LANG, XDG_CURRENT_DESKTOP, npm_package_dependencies_leaflet_routing_machine, npm_package_dependencies_react_dom, npm_package_dependencies_redux, npm_config_umask, XMODIFIERS, XDG_SESSION_DESKTOP, XAUTHORITY, LS_COLORS, GNOME_TERMINAL_SERVICE, npm_package_browserslist_0, npm_package_gitHead, npm_config_fund, npm_config_fetch_retry_maxtimeout, npm_config_loglevel, npm_config_logs_max, npm_config_message, npm_lifecycle_script, SSH_AUTH_SOCK, npm_package_browserslist_1, npm_config_ca, npm_config_cert, npm_config_global, npm_config_link, SHELL, npm_package_version, npm_package_browserslist_2, npm_config_save, npm_config_unicode, npm_config_access, npm_config_also, npm_lifecycle_event, QT_ACCESSIBILITY, GDMSESSION, npm_package_scripts_build, npm_package_browserslist_3, npm_config_argv, npm_config_searchlimit, npm_config_unsafe_perm, npm_config_update_notifier, npm_config_before, npm_config_long, npm_config_production, LESSCLOSE, npm_package_browserslist_4, npm_config_auth_type, npm_config_node_version, npm_config_tag, npm_config_git_tag_version, npm_config_commit_hooks, npm_config_shrinkwrap, npm_config_script_shell, GPG_AGENT_INFO, npm_package_license, npm_package_dependencies_framework7_react, npm_config_fetch_retry_factor, npm_config_strict_ssl, npm_config_save_exact, QT_IM_MODULE, npm_config_globalconfig, npm_config_init_module, npm_config_dev, npm_config_parseable, PWD, npm_package_dependencies_framework7, npm_config_globalignorefile, npm_execpath, XDG_CONFIG_DIRS, NVM_CD_FLAGS, XDG_DATA_DIRS, npm_config_cache_lock_retries, npm_config_searchstaleness, npm_package_dependencies_prop_types, npm_package_dependencies_styled_components, npm_package_devDependencies_cross_env, npm_config_save_prefix, npm_config_scripts_prepend_node_path, npm_config_node_options, npm_config_group, npm_config_init_author_email, npm_config_searchexclude, VTE_VERSION, npm_package_dependencies__fortawesome_fontawesome_svg_core, npm_config_git, npm_config_optional, INIT_CWD, npm_package_dependencies__react_leaflet_core, npm_package_dependencies_react, npm_config_json, NODE_ENV };
  }
});

export {
  __spreadValues,
  __spreadProps,
  __require,
  __restKey,
  __objRest,
  __commonJS,
  __export,
  __toESM,
  init_define_process_env,
  define_process_env_default
};
//# sourceMappingURL=chunk-GXFE3PYV.js.map
